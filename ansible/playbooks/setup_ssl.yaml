# Shamelessly stolen from https://github.com/semik/ansible-acme-demo
# This file is under the MIT license under Jan Tomášek (2023)
---
- name: Let's encrypt
  hosts: "{{ target | default('all') }}"

  tasks:
    - name: Ensures topology directory
      file:
        path: /opt/topology/ssl
        state: directory

    - name: Generate private key for ACME account
      community.crypto.openssl_privatekey:
        path: "/opt/topology/ssl/acme_account_key"
        type: RSA
        size: 2048
        mode: 0600

    - name: Register ACME Account
      community.crypto.acme_account:
        account_key_src: "/opt/topology/ssl/acme_account_key"
        acme_directory: "https://acme-staging-v02.api.letsencrypt.org/directory"
        acme_version: "2"
        state: present
        terms_agreed: true
        contact:
          - "mailto:{{ email }}"
      register: acme_account

    - name: Generate private key for server
      community.crypto.openssl_privatekey:
        path: "/opt/topology/ssl/{{ inventory_hostname }}.key"
        type: RSA
        size: 2048
        mode: 0600

    - name: Generate certificate signing request (CSR)
      community.crypto.openssl_csr:
        path: "/opt/topology/ssl/{{ inventory_hostname }}.csr"
        privatekey_path: "/opt/topology/ssl/{{ inventory_hostname }}.key"
        common_name: "{{ inventory_hostname }}"
        subject_alt_name: "DNS:{{ inventory_hostname }}"

    - name: Check if previous certificate exists
      stat:
        path: "/opt/topology/ssl/{{ inventory_hostname }}.crt"
      register: prev_cert

    - name: Revoke previous certificate
      community.crypto.acme_certificate_revoke:
        account_key_src: "/opt/topology/ssl/acme_account_key"
        certificate: "/opt/topology/ssl/{{ inventory_hostname }}.crt"
        acme_directory: "https://acme-staging-v02.api.letsencrypt.org/directory"
        acme_version: "2"
      when: prev_cert.stat.exists and acme_revoke

    - name: Create a challenge
      community.crypto.acme_certificate:
        account_key_src: "/opt/topology/ssl/acme_account_key"
        account_email: "{{ email }}"
        csr: "/opt/topology/ssl/{{ inventory_hostname }}.csr"
        dest: "/opt/topology/ssl/{{ inventory_hostname }}}.crt"
        acme_directory: "https://acme-staging-v02.api.letsencrypt.org/directory"
        acme_version: "2"
        terms_agreed: true
        force: false
        modify_account: false
        challenge: "http-01"
      register: acme_challenge

    - name: Show challenge
      debug: var=acme_challenge

    - name: Copy http-01 challenge data
      copy:
        dest: "/var/www/html/{{ item.value['http-01']['resource'] }}"
        content: "{{ item.value['http-01']['resource_value'] }}"
      with_dict:
        - "{{ acme_challenge['challenge_data'] }}"

    - name: Let the challenge(s) be validated and retrieve the cert and intermediate certificate
      community.crypto.acme_certificate:
        account_key_src: "/opt/topology/ssl/acme_account_key"
        csr: "/opt/topology/ssl/{{ inventory_hostname }}.csr"
        dest: "/opt/topology/ssl/{{ inventory_hostname }}.crt"
        fullchain_dest: "/opt/topology/ssl/{{ inventory_hostname }}-fullchain.crt"
        chain_dest: "/opt/topology/ssl/{{ inventory_hostname }}-intermediate.crt"
        data: "{{ acme_challenge }}"
        acme_directory: "https://acme-staging-v02.api.letsencrypt.org/directory"
        acme_version: "2"
        terms_agreed: true
        force: false
        modify_account: false
        challenge: "http-01"

    - name: Clean http-01 challenge data from drive
      file:
        path: "/var/www/html/{{ item.value['http-01'].resource }}"
        state: absent
      with_dict:
        - "{{ acme_challenge['challenge_data'] }}"
